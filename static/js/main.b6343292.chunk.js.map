{"version":3,"sources":["utils/_DATA.js","actions/users.action.js","actions/authentication.action.js","pages/login/Login.page.js","routers/PrivateRoute.js","actions/questions.action.js","pages/home/new-question/NewQuestion.page.js","utils/index.js","pages/home/leaderboard/components/leader-board-card/LeaderBoardCard.js","pages/home/leaderboard/LeaderBoard.util.js","pages/home/leaderboard/LeaderBoard.page.js","components/question-card/components/vote-card/VoteCard.js","components/question-card/QuestionCard.js","pages/home/questions/Questions.util.js","pages/home/questions/Questions.page.js","pages/home/question-detail/QuestionDetail.page.js","components/header/Header.js","pages/home/question-not-found/QuestionNotFound.page.js","pages/home/Home.page.js","routers/PublicRoute.js","App.js","reducers/index.js","reducers/users.reducer.js","reducers/questions.reducer.js","reducers/authentication.reducer.js","store.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","_saveQuestionAnswer","qid","answer","LOAD_USERS_SUCCESS","type","response","dispatch","a","SET_AUTHENTICATED_USER","LoginPage","state","userId","undefined","handleUserChange","e","data","setState","value","handleClickSignIn","props","authenticate","location","from","history","push","this","userOptions","Object","keys","map","key","image","avatar","src","className","Card","Content","Header","Meta","Form","Dropdown","placeholder","fluid","selection","options","onChange","extra","Button","onClick","Component","connect","authenticationActions","isAuthenticated","authentication","user","component","rest","render","to","pathname","FETCHING_REQUEST","LOAD_QUESTIONS_SUCCESS","ADD_QUESTION","SET_QUESTION_ANSWER","getState","NewQuestionPage","enableValidation","handleSubmit","preventDefault","addQuestion","then","isFetching","Container","Dimmer","active","Loader","Segment","basic","Field","required","as","Input","Label","color","pointing","Divider","horizontal","style","textAlign","float","marginTop","fontSize","authenticatedUserId","questionActions","convertObjectToArray","object","isEmptyObject","length","colorFromPlace","place","LeaderBoardCard","item","score","answersCount","questionsCount","corner","icon","Grid","columns","Row","stretched","Column","width","Image","Statistic","size","Value","getUserScore","LeaderBoardPage","userList","sort","b","generateAndOrderByScore","Group","index","calculatePercentage","total","round","easterEgg","toLowerCase","VoteCard","isSelected","isAnswered","totalVotes","onAnswerSelected","numberVotes","handleAnswerSelected","ribbon","padding","Progress","percent","progress","indicating","square","height","top","QuestionCard","isAnswerMode","isLoading","onClickBack","onOpenQuestion","answered","Icon","Feed","Event","Summary","href","moment","fromNow","stackable","verticalAlign","vertical","circular","inverted","doesUserVoteInThisQuestion","includes","filterByOptions","QuestionsPage","filterBy","handleOpenQuestion","handleFilterByChange","questionList","orderQuestions","filter","doesUserVote","filterQuestions","widths","inline","control","Radio","label","checked","centered","QuestionDetailPage","componentDidMount","match","getQuestionId","setAnswer","handleBack","params","authenticatedUser","questionNotFound","onClickItem","onClickLogout","handleItemClick","route","Menu","secondary","Item","position","trigger","QuestionNotFoundPage","HomePage","handleChangeRoute","handleLogout","logout","loadQuestions","userAuthenticated","path","exact","QuestionsDetailPage","App","loadUsers","basename","userActions","combineReducers","action","currentAnswers","error","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b6343292.chunk.js","sourcesContent":["let users = {\n   sarahedo: {\n      id: 'sarahedo',\n      name: 'Sarah Edo',\n      avatarURL: 'https://react.semantic-ui.com/images/avatar/large/jenny.jpg',\n      answers: {\n         \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n         \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n         \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n         \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n      },\n      questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n   },\n   tylermcginnis: {\n      id: 'tylermcginnis',\n      name: 'Tyler McGinnis',\n      avatarURL: 'https://react.semantic-ui.com/images/avatar/large/elliot.jpg',\n      answers: {\n         \"vthrdm985a262al8qx3do\": 'optionOne',\n         \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n      },\n      questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n   },\n   johndoe: {\n      id: 'johndoe',\n      name: 'John Doe',\n      avatarURL: 'https://react.semantic-ui.com/images/avatar/large/daniel.jpg',\n      answers: {\n         \"xj352vofupe1dqz9emx13r\": 'optionOne',\n         \"vthrdm985a262al8qx3do\": 'optionTwo',\n         \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n      },\n      questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n   }\n};\n\nlet questions = {\n   \"8xf0y6ziyjabvozdd253nd\": {\n      id: '8xf0y6ziyjabvozdd253nd',\n      author: 'sarahedo',\n      timestamp: 1467166872634,\n      optionOne: {\n         votes: ['sarahedo'],\n         text: 'have horrible short term memory',\n      },\n      optionTwo: {\n         votes: [],\n         text: 'have horrible long term memory'\n      }\n   },\n   \"6ni6ok3ym7mf1p33lnez\": {\n      id: '6ni6ok3ym7mf1p33lnez',\n      author: 'johndoe',\n      timestamp: 1468479767190,\n      optionOne: {\n         votes: [],\n         text: 'become a superhero',\n      },\n      optionTwo: {\n         votes: ['johndoe', 'sarahedo'],\n         text: 'become a supervillain'\n      }\n   },\n   \"am8ehyc8byjqgar0jgpub9\": {\n      id: 'am8ehyc8byjqgar0jgpub9',\n      author: 'sarahedo',\n      timestamp: 1488579767190,\n      optionOne: {\n         votes: [],\n         text: 'be telekinetic',\n      },\n      optionTwo: {\n         votes: ['sarahedo'],\n         text: 'be telepathic'\n      }\n   },\n   \"loxhs1bqm25b708cmbf3g\": {\n      id: 'loxhs1bqm25b708cmbf3g',\n      author: 'tylermcginnis',\n      timestamp: 1482579767190,\n      optionOne: {\n         votes: [],\n         text: 'be a front-end developer',\n      },\n      optionTwo: {\n         votes: ['sarahedo'],\n         text: 'be a back-end developer'\n      }\n   },\n   \"vthrdm985a262al8qx3do\": {\n      id: 'vthrdm985a262al8qx3do',\n      author: 'tylermcginnis',\n      timestamp: 1489579767190,\n      optionOne: {\n         votes: ['tylermcginnis'],\n         text: 'find $50 yourself',\n      },\n      optionTwo: {\n         votes: ['johndoe'],\n         text: 'have your best friend find $500'\n      }\n   },\n   \"xj352vofupe1dqz9emx13r\": {\n      id: 'xj352vofupe1dqz9emx13r',\n      author: 'johndoe',\n      timestamp: 1493579767190,\n      optionOne: {\n         votes: ['johndoe'],\n         text: 'write JavaScript',\n      },\n      optionTwo: {\n         votes: ['tylermcginnis'],\n         text: 'write Swift'\n      }\n   },\n};\n\nfunction generateUID() {\n   return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers() {\n   return new Promise((res, rej) => {\n      setTimeout(() => res({...users}), 1000)\n   })\n}\n\nexport function _getQuestions() {\n   return new Promise((res, rej) => {\n      setTimeout(() => res({...questions}), 1000)\n   })\n}\n\nfunction formatQuestion({optionOneText, optionTwoText, author}) {\n   return {\n      id: generateUID(),\n      timestamp: Date.now(),\n      author,\n      optionOne: {\n         votes: [],\n         text: optionOneText,\n      },\n      optionTwo: {\n         votes: [],\n         text: optionTwoText,\n      }\n   }\n}\n\nexport function _saveQuestion(question) {\n   return new Promise((res, rej) => {\n      const authedUser = question.author;\n      const formattedQuestion = formatQuestion(question);\n\n      setTimeout(() => {\n         questions = {\n            ...questions,\n            [formattedQuestion.id]: formattedQuestion\n         };\n\n         users = {\n            ...users,\n            [authedUser]: {\n               ...users[authedUser],\n               questions: users[authedUser].questions.concat([formattedQuestion.id])\n            }\n         };\n\n         res(formattedQuestion)\n      }, 1000)\n   })\n}\n\nexport function _saveQuestionAnswer({authedUser, qid, answer}) {\n   return new Promise((res, rej) => {\n      setTimeout(() => {\n         users = {\n            ...users,\n            [authedUser]: {\n               ...users[authedUser],\n               answers: {\n                  ...users[authedUser].answers,\n                  [qid]: answer\n               }\n            }\n         };\n\n         questions = {\n            ...questions,\n            [qid]: {\n               ...questions[qid],\n               [answer]: {\n                  ...questions[qid][answer],\n                  votes: questions[qid][answer].votes.concat([authedUser])\n               }\n            }\n         };\n\n         res()\n      }, 500)\n   })\n}\n","import {_getUsers} from \"../utils/_DATA\";\n\nconst FETCHING_REQUEST = () => ({\n   type: 'IS_FETCHING_USERS',\n   response: true\n});\n\nconst LOAD_USERS_SUCCESS = (users) => ({\n   type: 'LOAD_USERS_SUCCESS',\n   response: users\n});\n\nexport const load = () => async (dispatch) => {\n   dispatch(FETCHING_REQUEST());\n   const users = await _getUsers();\n   dispatch(LOAD_USERS_SUCCESS(users));\n};\n\n\nexport default {load}\n","const SET_AUTHENTICATED_USER = (id) => ({\n   type: 'AUTHENTICATED',\n   response: {id}\n});\nconst LOGOUT = () => ({type: 'LOG_OUT'});\n\nexport const authenticate = (id) => async (dispatch) => {\n   dispatch(SET_AUTHENTICATED_USER(id));\n};\nexport const logout = () => async (dispatch) => {\n   dispatch(LOGOUT());\n};\n\n\nexport default {authenticate, logout}\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {Button, Card, Dropdown, Form} from \"semantic-ui-react\";\n\nimport './Login.css'\n\n// Utils\nimport authenticationActions from \"../../actions/authentication.action\";\n\nclass LoginPage extends Component {\n   state = {\n      userId: undefined\n   };\n\n   handleUserChange = (e, data) => this.setState({userId: data.value});\n\n   handleClickSignIn = () => {\n      const {userId} = this.state;\n      const {users} = this.props;\n      if (users[userId]) {\n         this.props.authenticate(userId);\n\n         const {location} = this.props;\n         if(location.state && location.state.from) {\n            this.props.history.push(location.state.from);\n         }\n      }\n\n   };\n\n   render() {\n      const {users} = this.props;\n      const userOptions = Object.keys(users).map((key) => ({\n         key: users[key].id, value: users[key].id, text: users[key].name,\n         image: {avatar: true, src: users[key].avatarURL},\n      }));\n      return (\n         <div className='Login'>\n            <Card>\n               <Card.Content>\n                  <Card.Header>Welcome to the Would You Rather App</Card.Header>\n                  <Card.Meta>\n                     <span className='date'>Please sign in to continue</span>\n                  </Card.Meta>\n               </Card.Content>\n               <Card.Content>\n                  <Form>\n                     <label>Select your username:</label>\n                     <Dropdown\n                        placeholder='Select Friend'\n                        fluid\n                        selection\n                        options={userOptions}\n                        onChange={this.handleUserChange}\n                     />\n                  </Form>\n               </Card.Content>\n               <Card.Content extra>\n                  <Button fluid onClick={this.handleClickSignIn}>Sign in</Button>\n               </Card.Content>\n            </Card>\n         </div>\n      );\n   }\n}\n\nLoginPage.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n   users: state.users.data\n});\nconst mapDispatchToProps = (dispatch) => ({\n   authenticate: (id) => dispatch(authenticationActions.authenticate(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect, Route} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({\n                         isAuthenticated,\n                         component: Component,\n                         ...rest\n                      }) => (\n   <Route {...rest} render={(props) => (\n      isAuthenticated ? (\n         <Component {...props} />\n      ) : (\n         <Redirect to={{pathname: '/login', state: {from: props.location}}}/>\n      )\n   )}/>\n);\n\nPrivateRoute.propTypes = {\n   isAuthenticated: PropTypes.any,\n   component: PropTypes.any,\n   ...Route.propTypes\n};\n\nconst mapStateToProps = (state) => ({\n   isAuthenticated: state.authentication.user != null\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import {_getQuestions, _saveQuestion, _saveQuestionAnswer} from \"../utils/_DATA\";\n\nconst FETCHING_REQUEST = {\n   type: 'IS_FETCHING_QUESTIONS',\n   response: true\n};\n\nconst LOAD_QUESTIONS_SUCCESS = (questions) => ({\n   type: 'LOAD_QUESTIONS_SUCCESS',\n   response: questions\n});\nconst ADD_QUESTION = (question) => ({\n   type: 'ADD_QUESTIONS_SUCCESS',\n   response: question\n});\n\nconst SET_QUESTION_ANSWER = (id, userId, answer) => ({\n   type: 'SET_QUESTION_ANSWER_SUCCESS',\n   response: {id, userId, answer}\n});\n\nexport const load = () => async (dispatch) => {\n   dispatch(FETCHING_REQUEST);\n   const questions = await _getQuestions();\n   dispatch(LOAD_QUESTIONS_SUCCESS(questions));\n};\n\nexport const add = (optionOneText, optionTwoText) => async (dispatch, getState) => {\n   const state = getState();\n   const {id: userId} = state.authentication.user;\n   dispatch(FETCHING_REQUEST);\n   const question = await _saveQuestion({optionOneText, optionTwoText, author: userId});\n   dispatch(ADD_QUESTION(question))\n};\n\nexport const setAnswer = (id, answer) => async (dispatch, getState) => {\n   dispatch(FETCHING_REQUEST);\n   const state = getState();\n   const {id: userId} = state.authentication.user;\n   dispatch(SET_QUESTION_ANSWER(id, userId, answer));\n   return _saveQuestionAnswer({authedUser: userId, qid: id, answer});\n};\n\n\nexport default {add, load, setAnswer}\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {\n   Container,\n   Segment,\n   Loader,\n   Dimmer,\n   Form,\n   Header,\n   Input,\n   Label,\n   Divider,\n   Card,\n   Button\n} from \"semantic-ui-react\";\n\nimport questionActions from \"../../../actions/questions.action\";\n\n\nclass NewQuestionPage extends Component {\n   state = {\n      optionOne: '',\n      optionTwo: '',\n      enableValidation: false,\n   };\n\n   handleSubmit = (e) => {\n      e.preventDefault();\n      const {optionOne, optionTwo} = this.state;\n      if (optionTwo === '' || optionTwo === '') {\n         this.setState({enableValidation: true});\n         return;\n      }\n      this.setState({enableValidation: false});\n      this.props.addQuestion(optionOne, optionTwo).then(() => this.props.history.push('/'));\n   };\n\n   render() {\n      const {enableValidation, optionOne, optionTwo} = this.state;\n      const {isFetching} = this.props;\n      return (\n         <Container className='QuestionsPage'>\n            <Dimmer active={isFetching}>\n               <Loader/>\n            </Dimmer>\n            <Segment basic>\n               <Card fluid>\n                  <Card.Content>\n                     <Card.Header>Create new question</Card.Header>\n                     <Form>\n                        <Form.Field required>\n                           <div>Complete the question</div>\n                           <Header as='h2'>Would you rather...</Header>\n                        </Form.Field>\n                        <Form.Field required>\n                           <Input placeholder='Enter option one text here'\n                                  onChange={(e, {value}) => this.setState({optionOne: value})}/>\n                           {enableValidation && optionOne === '' && <Label basic color='red' pointing>\n                              Please enter a value\n                           </Label>}\n                        </Form.Field>\n                        <Divider horizontal>Or</Divider>\n                        <Form.Field>\n                           <Input placeholder='Enter option two text here'\n                                  onChange={(e, {value}) => this.setState({optionTwo: value})}/>\n                           {enableValidation && optionTwo === '' && <Label basic color='red' pointing>\n                              Please enter a value\n                           </Label>}\n                        </Form.Field>\n                     </Form>\n                  </Card.Content>\n                  <Card.Content extra style={{textAlign:'right'}}>\n                     <span style={{float: 'left', marginTop: '10px', fontSize: '8px'}}>Hey. psst. Yes you!. If you are fan of Re-zero. Type the twins ;)</span>\n                     <Button onClick={this.handleSubmit}>Submit</Button>\n                  </Card.Content>\n               </Card>\n            </Segment>\n         </Container>\n      );\n   }\n}\n\nNewQuestionPage.propTypes = {};\n\nconst mapStateToProps = (state) => {\n   const users = state.users.data;\n   const {user = {}} = state.authentication;\n   return {\n      users,\n      isFetching: state.questions.isFetching,\n      questions: state.questions.data,\n      authenticatedUserId: user.id\n   }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n   addQuestion: (optionOneText, optionTwoText) => dispatch(questionActions.add(optionOneText, optionTwoText))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewQuestionPage);\n","export const convertObjectToArray = (object) => {\n   return Object.keys(object).map((e) => object[e]);\n};\n\nexport const isEmptyObject = (object) => Object.keys(object).length <= 0;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Card, Grid, Header, Image, Label, Segment, Statistic} from \"semantic-ui-react\";\n\nimport './LeaderBoardCard.css'\n\nconst colorFromPlace = (place) => {\n   switch (place) {\n      case 1:\n         return 'yellow';\n      case 2:\n         return 'grey';\n      case 3:\n         return 'brown';\n      default:\n         return 'red'\n   }\n};\n\nconst LeaderBoardCard = (props) => {\n   const {item, place} = props;\n   const {avatarURL, score} = item;\n\n   const answersCount = Object.keys(item.answers || {}).length;\n   const questionsCount = item.questions ? item.questions.length : 0;\n   return (\n      <Card className='LeaderBoardCard' fluid>\n         {place && place <= 3 && <Label as='a' color={colorFromPlace(place)} corner icon='trophy'/>}\n            <Grid columns={3}>\n               <Grid.Row stretched>\n                  <Grid.Column width={3}>\n                     <Image src={avatarURL}/>\n                  </Grid.Column>\n                  <Grid.Column  width={9}>\n                     <Segment basic><Header as='h1'>{item.name}</Header></Segment>\n                     <Segment basic>\n                        <Header as='h2'>Answered Questions: {answersCount}</Header>\n                        <Header as='h2'>Created Questions: {questionsCount}</Header>\n                     </Segment>\n                  </Grid.Column>\n                  <Grid.Column width={3}>\n                     <div className='score-statistics'>\n                        <Statistic size='huge'>\n                           <Statistic.Value>{score}</Statistic.Value>\n                           <Statistic.Label>Score</Statistic.Label>\n                        </Statistic>\n                     </div>\n                  </Grid.Column>\n               </Grid.Row>\n            </Grid>\n      </Card>\n   );\n};\n\nLeaderBoardCard.propTypes = {\n   item: PropTypes.object,\n   place: PropTypes.number,\n};\n\nexport default LeaderBoardCard;\n","export const generateAndOrderByScore = (users = []) => users.map(e => ({\n   ...e,\n   score: getUserScore(e)\n})).sort((a, b) => b.score - a.score);\n\nexport const getUserScore = (user) => {\n   let score = 0;\n   score += Object.keys(user.answers || {}).length;\n   score += user.questions ? user.questions.length : 0;\n   return score;\n};\n","import React, {Component} from 'react';\nimport {convertObjectToArray} from \"../../../utils\";\nimport {connect} from \"react-redux\";\nimport LeaderBoardCard from \"./components/leader-board-card/LeaderBoardCard\";\nimport {Card, Container, Segment} from \"semantic-ui-react\";\nimport {generateAndOrderByScore} from \"./LeaderBoard.util\";\n\n\nclass LeaderBoardPage extends Component {\n   render() {\n      const {users = {}} = this.props;\n      const userList = generateAndOrderByScore(convertObjectToArray(users));\n      return (\n         <Container>\n            <Segment>\n               <Card.Group>\n                  {userList && userList.map((e, index) => <LeaderBoardCard key={e.id} item={e} place={index + 1}/>)}\n               </Card.Group>\n            </Segment>\n         </Container>\n      );\n   }\n}\n\nconst mapStateToProps = (state) => ({\n   users: state.users.data,\n});\n\nexport default connect(mapStateToProps)(LeaderBoardPage);\n","import {Card, Header, Label, Progress} from \"semantic-ui-react\";\nimport React from \"react\";\n\n\nconst calculatePercentage = (total, votes) => Math.round(votes / total * 100);\n\nconst easterEgg = (text = '') => {\n   switch (text.toLowerCase()) {\n      case 'rem':\n         return 'easter-egg-1';\n      case 'ram':\n         return 'easter-egg-2';\n      default:\n         return '';\n   }\n};\n\nconst VoteCard = ({item, isSelected, isAnswered, totalVotes, onAnswerSelected, value}) => {\n   const {votes, text} = item;\n   const numberVotes = votes ? votes.length : 0;\n   const handleAnswerSelected = !isAnswered ? () => onAnswerSelected(value) : undefined;\n\n   return (\n      <Card fluid onClick={handleAnswerSelected} className={`VoteCard ${easterEgg(text)}`}>\n         {isSelected && <Label as='a' color='blue' ribbon>Your Vote</Label>}\n         <Card.Content>\n            <Header as='h1'>{text}</Header>\n            {isAnswered && (\n               <div style={{width: '100%', padding: '0 3rem'}}>\n                  <Progress percent={calculatePercentage(totalVotes, numberVotes)} progress\n                            indicating/>\n                  <Header as='h4'>{`${numberVotes} out of ${totalVotes} votes`}</Header>\n               </div>\n            )}\n         </Card.Content>\n      </Card>\n   )\n};\n\n\nexport default VoteCard;\n","import React from 'react';\nimport {Button, Card, Dimmer, Divider, Feed, Grid, Header, Icon, Loader, Segment} from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nimport './QuestionCard.css'\nimport VoteCard from \"./components/vote-card/VoteCard\";\nimport moment from \"moment\";\n\nconst square = {width: 100, height: 100, top: -50};\n\n\nconst QuestionCard = (props) => {\n   const {user = {}, question = {}, author = {}, fluid, isAnswerMode, onAnswerSelected, isLoading = false, onClickBack} = props;\n   const {onOpenQuestion} = props;\n   const handleOpenQuestion = () => {\n      if (onOpenQuestion) {\n         onOpenQuestion(question.id);\n      }\n   };\n   const handleAnswerSelected = (answered) => {\n      if (answer == null && onAnswerSelected) {\n         onAnswerSelected(answered);\n      }\n   };\n\n   const {optionOne = {}, optionTwo = {}} = question;\n\n   let answer;\n   if (user.answers) {\n      answer = user.answers[question.id];\n   }\n\n   let totalVotes = 0;\n   if (optionOne && optionOne.votes) {\n      totalVotes += optionOne.votes.length;\n   }\n   if (optionTwo && optionTwo.votes) {\n      totalVotes += optionTwo.votes.length;\n   }\n\n\n   return (\n      <Card fluid={fluid} className={`QuestionCard ${isAnswerMode ? 'answer-mode' : ''}`}>\n         <Dimmer active={isLoading}>\n            <Loader/>\n         </Dimmer>\n         <Card.Content>\n            <div className='card-header'>\n               {onClickBack && <Icon name='arrow left' onClick={onClickBack} className='back-button'/>}\n               <Feed>\n                  <Feed.Event>\n                     <Feed.Label image={author.avatarURL}/>\n                     <Feed.Content>\n                        <Feed.Summary>\n                           <div className='author-name'>\n                              <a href='/'>{author.name}</a> asks\n                           </div>\n                           <Card.Meta className='created-date'>\n                              <span className='date'>{moment(question.timestamp).fromNow()}</span>\n                           </Card.Meta>\n                        </Feed.Summary>\n                     </Feed.Content>\n                  </Feed.Event>\n               </Feed>\n            </div>\n         </Card.Content>\n         <Card.Content>\n            <div className='question-title'>\n               <Header as='h2'>Would you rather?</Header>\n            </div>\n            {isAnswerMode && (\n               <div className='answers'>\n                  <Grid columns={2} stackable textAlign='center'>\n                     <Grid.Row verticalAlign='middle'>\n                        <Divider vertical>\n                           <Segment circular inverted style={square}>\n                              <Header as='h3' inverted>OR</Header>\n                           </Segment>\n                        </Divider>\n                        <Grid.Column className='answer'>\n                           <VoteCard isSelected={answer === \"optionOne\"} isAnswered={answer != null} item={optionOne}\n                                     totalVotes={totalVotes}\n                                     onAnswerSelected={handleAnswerSelected} value={'optionOne'}/>\n\n                        </Grid.Column>\n                        <Grid.Column className='answer'>\n                           <VoteCard isSelected={answer === \"optionTwo\"} isAnswered={answer != null} item={optionTwo}\n                                     totalVotes={totalVotes}\n                                     onAnswerSelected={handleAnswerSelected} value={'optionTwo'}/>\n                        </Grid.Column>\n                     </Grid.Row>\n                  </Grid>\n               </div>\n            )}\n            {!isAnswerMode && optionOne && <span>{optionOne.text.substring(0, 10)}...</span>}\n         </Card.Content>\n         {onOpenQuestion && <Card.Content>\n            <Button fluid onClick={handleOpenQuestion}>View poll</Button>\n         </Card.Content>}\n      </Card>\n   );\n};\n\nQuestionCard.propTypes = {\n   user: PropTypes.object,\n   question: PropTypes.object,\n   isAnswerMode: PropTypes.bool,\n   onClickBack: PropTypes.func,\n   onOpenQuestion: PropTypes.func,\n   onAnswerSelected: PropTypes.func,\n};\n\nexport default QuestionCard;\n","export const filterQuestions = (questions = [], filterBy = 'unanswered', userId) => questions.filter((e) => {\n   if (filterBy === 'all') {\n      return true\n   }\n   const doesUserVote = doesUserVoteInThisQuestion(e, userId);\n   if (filterBy === 'answered' && doesUserVote) {\n      return true;\n   }\n   return filterBy === 'unanswered' && !doesUserVote;\n\n});\n\nexport const orderQuestions = (questions = []) => questions.sort((a, b) => b.timestamp - a.timestamp);\n\n\nexport const doesUserVoteInThisQuestion = (question = {}, userId = \"\") => {\n   if (question.optionOne && question.optionOne.votes.includes(userId)) {\n      return true;\n   }\n   return !!(question.optionTwo && question.optionTwo.votes.includes(userId));\n};\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {Container, Segment, Card, Form, Radio, Loader, Dimmer} from \"semantic-ui-react\";\n\nimport {convertObjectToArray} from \"../../../utils\";\nimport QuestionCard from \"../../../components/question-card/QuestionCard\";\nimport {filterQuestions, orderQuestions} from \"./Questions.util\";\n\nimport './Questions.css'\nimport questionActions from \"../../../actions/questions.action\";\n\nconst filterByOptions = [{\n   key: 'unanswered',\n   value: 'unanswered',\n   text: 'Unanswered'\n}, {\n   key: 'answered',\n   value: 'answered',\n   text: 'Answered'\n}, {\n   key: 'all',\n   value: 'all',\n   text: 'All'\n},];\n\nclass QuestionsPage extends Component {\n   state = {\n      filterBy: 'unanswered'\n   };\n   handleOpenQuestion = (id) => this.props.history.push(`/questions/${id}`);\n\n   handleFilterByChange = (e, {value}) => this.setState({filterBy: value});\n\n   render() {\n      const {filterBy} = this.state;\n      const {questions, users, authenticatedUserId, isFetching} = this.props;\n      const questionList = orderQuestions(filterQuestions(convertObjectToArray(questions), filterBy, authenticatedUserId));\n      return (\n         <Container className='QuestionsPage'>\n            <Dimmer active={isFetching}>\n               <Loader/>\n            </Dimmer>\n            <Segment>\n               <Segment basic>\n                  <Form className='toolbar'>\n                     <Form.Group widths='equal'>\n                        <Form.Group inline className='left-options'>\n                           <label>Show: </label>\n                           {filterByOptions.map((e) => (\n                              <Form.Field\n                                 key={e.key}\n                                 control={Radio}\n                                 label={e.text}\n                                 value={e.value}\n                                 checked={filterBy === e.value}\n                                 onChange={this.handleFilterByChange}\n                              />\n                           ))}\n                        </Form.Group>\n                     </Form.Group>\n                  </Form>\n               </Segment>\n               <Card.Group centered>\n                  {questionList && questionList.map((e) => (\n                     <QuestionCard key={e.id} question={e} author={users[e.author]}\n                                   onOpenQuestion={this.handleOpenQuestion}/>\n                  ))}\n               </Card.Group>\n            </Segment>\n         </Container>\n      );\n   }\n}\n\nQuestionsPage.propTypes = {};\n\nconst mapStateToProps = (state) => {\n   const users = state.users.data;\n   const {user = {}} = state.authentication;\n   return {\n      users,\n      isFetching: state.questions.isFetching,\n      questions: state.questions.data,\n      authenticatedUserId: user.id\n   }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n   addQuestion: (optionOneText, optionTwoText) => dispatch(questionActions.add(optionOneText, optionTwoText))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionsPage);\n","import React, {Component} from 'react';\nimport {Container, Segment} from \"semantic-ui-react\";\nimport {connect} from \"react-redux\";\n\nimport QuestionCard from \"../../../components/question-card/QuestionCard\";\n\nimport questionActions from \"../../../actions/questions.action\";\nimport {isEmptyObject} from \"../../../utils\";\nimport {Redirect} from \"react-router-dom\";\n\nclass QuestionDetailPage extends Component {\n   componentDidMount = () => {\n      const {match} = this.props;\n      if (match != null) {\n         const {id} = match;\n         this.setState({id})\n      }\n   };\n\n   handleAnswerSelected = (answer) => {\n      const id = this.getQuestionId();\n      this.props.setAnswer(id, answer)\n   };\n\n   handleBack = () => {\n      this.props.history.push('/');\n   };\n\n   getQuestionId = () => {\n      const {match} = this.props;\n      if (match != null) {\n         return match.params.id;\n      }\n   };\n\n   render() {\n      const {authenticatedUser, users, questions, isFetching} = this.props;\n      const id = this.getQuestionId();\n      const question = questions[id] || {};\n      const user = authenticatedUser || {};\n      const author = users[question.author] || {};\n\n      // Validate if the user access to a question through the URL and the question is not created\n      const questionNotFound = questions && !isEmptyObject(questions) && isEmptyObject(question);\n\n      return (\n         <Container>\n            <Segment basic>\n               {!questionNotFound && (\n                  <QuestionCard fluid={true} question={question} user={user} author={author} isAnswerMode={true}\n                                onClickBack={this.handleBack} isLoading={isFetching}\n                                onAnswerSelected={this.handleAnswerSelected}/>\n               )}\n               {/*{questionNotFound && <Segment>*/}\n               {/*   <Header>Question not found</Header>*/}\n               {/*   <div>Please go back to the <Link to='/'>Home page</Link></div>*/}\n               {/*</Segment>}*/}\n\n               {questionNotFound && <Redirect to='/404'/>}\n            </Segment>\n         </Container>\n      );\n   }\n}\n\n\nQuestionDetailPage.propTypes = {};\n\nconst mapStateToProps = (state) => {\n   const users = state.users.data;\n   const {user = {}} = state.authentication;\n   return {\n      isFetching: state.questions.isFetching || state.users.isFetching,\n      users,\n      questions: state.questions.data,\n      authenticatedUser: users[user.id]\n   }\n};\nconst mapDispatchToProps = (dispatch) => ({\n   setAnswer: (id, answer) => dispatch(questionActions.setAnswer(id, answer)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionDetailPage);\n","import React from 'react';\nimport {Dropdown, Image, Menu} from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({onClickItem, onClickLogout, active, user = {}}) => {\n\n   const handleItemClick = (route) => {\n      if (onClickItem) {\n         onClickItem(route);\n      }\n   };\n\n   const handleItemClickLogOut = () => {\n      if (onClickLogout) {\n         onClickLogout();\n      }\n   };\n\n   return (\n      <div>\n         <Menu pointing secondary>\n            <Menu.Item\n               name='Home'\n               active={active === '/'}\n               onClick={() => handleItemClick('/')}\n            />\n            <Menu.Item\n               name='New question'\n               active={active === '/add'}\n               onClick={() => handleItemClick('/add')}\n            />\n            <Menu.Item\n               name='Leader board'\n               active={active === '/leaderboard'}\n               onClick={() => handleItemClick('/leaderboard')}\n            />\n            <Menu.Menu position='right'>\n               <Dropdown\n                  trigger={<span><Image avatar src={user.avatarURL}/> {user.name}</span>}\n                  item>\n                  <Dropdown.Menu>\n                     <Dropdown.Item onClick={handleItemClickLogOut}>Logout</Dropdown.Item>\n                  </Dropdown.Menu>\n               </Dropdown>\n            </Menu.Menu>\n         </Menu>\n      </div>\n   );\n};\n\nHeader.propTypes = {\n   user: PropTypes.object,\n   active: PropTypes.string,\n   onClickItem: PropTypes.func,\n   onClickLogout: PropTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\nimport {Container, Header, Segment} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\n\nconst QuestionNotFoundPage = () => {\n   return (\n      <Container>\n         <Segment style={{textAlign:'center'}}>\n            <Header as='h1'>404</Header>\n            <Header as='h2'>Question not found</Header>\n            <div>Please go back to the <Link to='/'>Home page</Link></div>\n         </Segment>\n      </Container>\n   );\n};\n\n\nQuestionNotFoundPage.propTypes = {};\n\nexport default QuestionNotFoundPage;\n","import React, {Component} from 'react';\nimport {Route} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n// Components\nimport NewQuestionPage from './new-question/NewQuestion.page';\nimport LeaderBoardPage from './leaderboard/LeaderBoard.page';\nimport QuestionsPage from './questions/Questions.page';\nimport QuestionsDetailPage from './question-detail/QuestionDetail.page';\nimport Header from \"../../components/header/Header\";\nimport questionActions from \"../../actions/questions.action\";\nimport authenticationActions from \"../../actions/authentication.action\";\nimport QuestionNotFoundPage from \"./question-not-found/QuestionNotFound.page\";\n\nclass HomePage extends Component {\n   componentDidMount() {\n      this.props.loadQuestions();\n   }\n\n   handleChangeRoute = (route) => this.props.history.push(route);\n   handleLogout = () => {\n      this.props.logout();\n   };\n\n   render() {\n      const {location = {}, userAuthenticated} = this.props;\n      return (\n         <div>\n            <Header active={location.pathname} onClickItem={this.handleChangeRoute} onClickLogout={this.handleLogout}\n                    user={userAuthenticated}/>\n            <Route path='/' component={QuestionsPage} exact={true}/>\n            <Route path='/add' component={NewQuestionPage} exact={true}/>\n            <Route path='/leaderboard' component={LeaderBoardPage} exact={true}/>\n            <Route path=\"/questions/:id\" component={QuestionsDetailPage} exact={true}/>\n            <Route path=\"/404\" component={QuestionNotFoundPage} exact={true}/>\n         </div>\n      );\n   }\n}\n\nHomePage.propTypes = {};\n\nconst mapStateToProps = (state) => {\n   const users = state.users.data;\n   const {id} = state.authentication.user;\n   return {\n      users,\n      userAuthenticated: users[id]\n   }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n   logout: () => dispatch(authenticationActions.logout()),\n   loadQuestions: () => dispatch(questionActions.load()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Route, Redirect} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\nconst PublicRoute = ({\n                        isAuthenticated,\n                        component: Component,\n                        ...rest\n                     }) => (\n   <Route {...rest} component={(props) => (\n      isAuthenticated ? (\n         <Redirect to=\"/\"/>\n      ) : (\n         <Component {...props} />\n      )\n   )}/>\n);\n\nPublicRoute.propTypes = {\n   isAuthenticated: PropTypes.any,\n   component: PropTypes.any.isRequired,\n   ...Route.propTypes\n};\n\nconst mapStateToProps = (state) => ({\n   isAuthenticated: state.authentication.user != null\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {BrowserRouter, Switch} from \"react-router-dom\";\n\nimport './App.css';\nimport userActions from \"./actions/users.action\";\nimport LoginPage from \"./pages/login/Login.page\";\nimport PrivateRoute from \"./routers/PrivateRoute\";\nimport HomePage from \"./pages/home/Home.page\";\nimport PublicRoute from \"./routers/PublicRoute\";\n\n\n\n\n\nclass App extends Component {\n   componentDidMount() {\n      this.props.loadUsers();\n   }\n\n   render() {\n      return (\n         <div className=\"App\">\n            <BrowserRouter  basename=\"/Would-you-rather\">\n               <Switch>\n                  <PublicRoute exact={true} path='/login' component={LoginPage}/>\n                  <PrivateRoute path='/' component={HomePage}/>\n               </Switch>\n            </BrowserRouter>\n         </div>\n      );\n   }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n   loadUsers: () => dispatch(userActions.load()),\n});\n\nexport default connect(undefined, mapDispatchToProps)(App);\n","import {combineReducers} from \"redux\";\n\nimport users from './users.reducer'\nimport questions from './questions.reducer'\nimport authentication from './authentication.reducer'\n\nexport default combineReducers({\n   users,\n   questions,\n   authentication\n})\n","export default (state = {data: {}}, action = {}) => {\n   const {type, response} = action;\n\n   switch (type) {\n      case 'IS_FETCHING_USERS': {\n         return {\n            ...state,\n            isFetching: true\n         };\n      }\n\n      case 'LOAD_USERS_FAILURE': {\n         return {\n            ...state,\n            isFetching: false\n         };\n      }\n\n      case 'SET_QUESTION_ANSWER_FAILURE': {\n         const {id, answer, userId} = response;\n         const currentAnswers = {\n            ...state.data[userId].answers,\n            [id]: answer\n         };\n         delete currentAnswers[id];\n         return {\n            ...state,\n            data: {\n               ...state.data,\n               [userId]: {\n                  ...state.data[userId],\n                  answers: currentAnswers\n               }\n            },\n            error: null,\n            isFetching: false\n         };\n      }\n\n      case 'SET_QUESTION_ANSWER_SUCCESS': {\n         const {id, answer, userId} = response;\n         return {\n            ...state,\n            data: {\n               ...state.data,\n               [userId]: {\n                  ...state.data[userId],\n                  answers: {\n                     ...state.data[userId].answers,\n                     [id]: answer\n                  }\n               }\n            },\n            error: null,\n            isFetching: false\n         };\n      }\n      case 'ADD_QUESTIONS_SUCCESS': {\n         return {\n            ...state,\n            data: {\n               ...state.data,\n               [response.author]: {\n                  ...state.data[response.author],\n                  questions: state.data[response.author].questions.concat([response.id])\n               }\n            },\n            error: null,\n            isFetching: false\n         };\n      }\n\n      case 'LOAD_USERS_SUCCESS': {\n         return {\n            ...state,\n            data: response,\n            error: null,\n            isFetching: false\n         };\n      }\n\n      case 'CLEAR_USER': {\n         return {\n            ...state,\n         }\n      }\n\n      default: {\n         return state;\n      }\n   }\n};\n","export default (state = {data: {}}, action = {}) => {\n   const {type, response} = action;\n\n   switch (type) {\n      case 'IS_FETCHING_QUESTIONS': {\n         return {\n            ...state,\n            isFetching: true\n         };\n      }\n\n      case 'ADD_QUESTIONS_SUCCESS': {\n         return {\n            ...state,\n            data: {\n               ...state.data,\n               [response.id]: response\n            },\n            error: null,\n            isFetching: false\n         };\n      }\n\n      case 'SET_QUESTION_ANSWER_SUCCESS': {\n         const {id, userId, answer} = response;\n         return {\n            ...state,\n            data: {\n               ...state.data,\n               [response.id]: {\n                  ...state.data[id],\n                  [answer]: {\n                     ...state.data[id][answer],\n                     votes: state.data[id][answer].votes.concat([userId])\n                  }\n               }\n            },\n            error: null,\n            isFetching: false\n         };\n      }\n\n      case 'SET_QUESTION_ANSWER_FAILURE': {\n         const {id, userId, answer} = response;\n         return {\n            ...state,\n            data: {\n               ...state.data,\n               [response.id]: {\n                  ...state.data[id],\n                  [answer]: {\n                     ...state.data[id][answer],\n                     votes: state.data[id][answer].votes.filter(e => e !== userId)\n                  }\n               }\n            },\n            error: null,\n            isFetching: false\n         };\n      }\n\n      case 'LOAD_QUESTIONS_SUCCESS': {\n         return {\n            ...state,\n            data: response,\n            error: null,\n            isFetching: false\n         };\n      }\n\n      case 'CLEAR_QUESTIONS': {\n         return {\n            ...state,\n            active: undefined\n         }\n      }\n\n      default: {\n         return state;\n      }\n   }\n};\n","export default (state = {user: undefined}, action = {}) => {\n   const {error, type, response} = action;\n\n   switch (type) {\n\n      case 'AUTHENTICATED': {\n         return {\n            ...state,\n            error,\n            user: response\n         };\n      }\n\n      case 'LOG_OUT': {\n         return {\n            ...state,\n            user: undefined\n         }\n      }\n\n      default: {\n         return state;\n      }\n   }\n};\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk'\n\nimport reducers from './reducers';\n\n// Configure redux extension\nconst composeEnhancers = (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n   trace: true,\n   traceLimit: 25\n})) || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n   <Provider store={store}>\n      <App/>\n   </Provider>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}